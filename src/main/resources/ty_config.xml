<?xml version="1.0" encoding="utf-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <bean id="tyDataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
        <property name="driverClassName" value="${ty.jdbc.mysql.Driver}"></property>
        <property name="url" value="${db.connection}"></property>
        <property name="username" value="${db.connection.username}"></property>
        <property name="password" value="${db.connection.password}"></property>
        <!--公共配置属性-->
        <property name="maxActive" value="${ty.tomcat.jdbc.pool.maxActive}"></property>
        <property name="initialSize" value="${ty.tomcat.jdbc.pool.initialSize}"></property>
        <property name="minIdle" value="${ty.tomcat.jdbc.pool.minIdle}"></property>
        <property name="jdbcInterceptors" value="${ty.tomcat.jdbc.pool.jdbcInterceptors}"></property>

        <property name="testWhileIdle" value="true"></property>
        <property name="testOnBorrow" value="true"></property>
        <property name="validationQuery" value="select 1"></property>
        <property name="testOnReturn" value="false"></property>
        <property name="validationInterval" value="30000"></property>
        <property name="timeBetweenEvictionRunsMillis" value="5000"></property>
        <property name="maxWait" value="15000"></property>
        <property name="removeAbandoned" value="true"></property>
        <property name="removeAbandonedTimeout" value="60"></property>
        <property name="logAbandoned" value="true"></property>
        <property name="minEvictableIdleTimeMillis" value="30000"></property>
        <property name="jmxEnabled" value="true"/>
        <!--这个名字不能随便更改,因为它对应着我们perseus中mbean的name-->
        <property name="name" value="jdbcPool"/>
    </bean>

    <!--Hibernate Session Factory-->
    <bean id="tySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="tyDataSource"/>

        <property name="mappingResources">
            <list>
                <!--TY DB-->
                <value>conf/ty_db.xml</value>
                <!-- TY DB Core-->
                <value>conf/ty_db_core.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.generate_statistics">${ty.db.hibernate.generate_statistics}</prop>
                <prop key="hibernate.dialect">${ty.db.hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${ty.db.hibernate.show_sql}</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">${ty.db.hibernate.hbm2ddl_auto}</prop>-->
                <prop key="hibernate.cache.use_query_cache">${ty.db.hibernate.cache.use_query_cache}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${ty.db.hibernate.cache.use_second_level_cache}</prop>
                <!--<prop key="hibernate.cache.provider_class">${ty.db.hibernate.cache.provider_class}</prop>-->
                <!-- 改变Hibernate连接数据库的事务隔离级别
                    1: 读未提交
                    2: 读已提交
                    4: 可重复读
                    8: 串行化
                 -->
                <!--<prop key="hibernate.connection.isolation">8</prop>-->
                <prop key="hibernate.connection.autocommit">true</prop>
            </props>
        </property>
    </bean>

    <!-- 配置事务管理器 指定其作用的sessionFactory把事务交给Spring去处理 -->
    <bean id="tyTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="tySessionFactory"/>
        </property>
    </bean>
    <!--以 @Transactional 标注来定义事务,默认事务管理使用transactionManager-->
    <tx:annotation-driven transaction-manager="tyTransactionManager"
                          proxy-target-class="true"/>


    <!--引入ty配置  TY Server-->
    <import resource="classpath:conf/ty_server.xml"/>

</beans>